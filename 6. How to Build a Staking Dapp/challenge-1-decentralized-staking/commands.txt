cd D:\USER\Downloads\0xCOURSES\Alchemy University\Road to Web3\road-to-web3-advanced-extension\6. How to Build a Staking Dapp\challenge-1-decentralized-staking

yarn install



yarn start

yarn chain

yarn deploy

yarn deploy --reset  //Whenever you made changes to the smart contract



-------------DONE-------------
Watch the tutorial
https://www.youtube.com/watch?v=aZRdaE8jxPk


NOTES: Use the local local wallet of the staker instead of the metamask. Add funds to the staker from the faucet. DONE


1. Dapp checking: Does the dApp feature single-use staking? Are the withdrawal/fund repatriation conditions respected? Go ahead of hit yarn deploy --reset a few times to check each window of time. DONE


2. Update the interest mechanism in the Staker.sol contract so that you receive a "non-linear" amount of ETH based on the blocks between deposit and withdrawal. Basic exponential function!

3. Allow users to deposit any arbitrary amount of ETH into the smart contract, not just 0.5 ETH.

4. Instead of using the vanilla ExampleExternalContract contract, implement a function in Staker.sol that allows you to retrieve the ETH locked up in ExampleExternalContract and re-deposit it back into the Staker contract

    Make sure to only "white-list" a single address to call this new function to gate its usage!
    Make sure that you create logic/remove existing code to ensure that users are able to interact with the Staker contract over and over again! We want to be able to ping-pong from Staker -> ExampleExternalContract repeatedly!


-------------ToDo-------------


